{"mappings":"AAAA;;;;;;CAMC,GACD,eAAe;IACX,MAAM,SAAS;IACf,MAAM,MAAM,CAAC,wEAAwE,EAAE,QAAQ;IAE/F,IAAI;QACA,kDAAkD;QAClD,cAAc,SAAS,GAAG,CAAC,sBAAsB,CAAC;QAElD,kCAAkC;QAClC,MAAM,WAAW,MAAM,MAAM;QAE7B,8CAA8C;QAC9C,IAAI,CAAC,SAAS,EAAE,EACZ,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAG5D,sCAAsC;QACtC,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,+BAA+B;QAC/B,YAAY,KAAK,QAAQ;IAC7B,EAAE,OAAO,OAAO;QACZ,6CAA6C;QAC7C,cAAc,SAAS,GAAG,CAAC,sCAAsC,EAAE,MAAM,OAAO,CAAC,IAAI,CAAC;IAC1F;AACJ;AAEA;;;;;CAKC,GACD,SAAS,YAAY,QAAQ;IACzB,8CAA8C;IAC9C,IAAI,CAAC,YAAY,SAAS,MAAM,KAAK,GAAG;QACpC,cAAc,SAAS,GAAG;QAC1B;IACJ;IAEA,6CAA6C;IAC7C,cAAc,SAAS,GAAG,SACrB,KAAK,CAAC,GAAG,IAAI,qCAAqC;KAClD,GAAG,CAAC,CAAA,UAAW,CAAC;;0BAEC,EAAE,QAAQ,UAAU,IAAI,kCAAkC;;iCAEnD,EAAE,QAAQ,GAAG,CAAC,kBAAkB,EAAE,QAAQ,KAAK,IAAI,qBAAqB;uBAClF,EAAE,QAAQ,WAAW,GAAG,QAAQ,WAAW,CAAC,SAAS,CAAC,GAAG,MAAM,QAAQ,4BAA4B;gDAC1E,EAAE,QAAQ,MAAM,CAAC,IAAI,IAAI,UAAU,0BAA0B,EAAE,IAAI,KAAK,QAAQ,WAAW,EAAE,kBAAkB,GAAG;;;QAG1J,CAAC,EAAE,IAAI,CAAC;AAChB;AAEA;;;;;CAKC,GACD,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C,oCAAoC;IACpC;AACJ","sources":["src/js/news.js"],"sourcesContent":["/**\r\n * Fetches the latest health-related news using NewsAPI.\r\n * Displays the news articles in the `newsContainer` element.\r\n * \r\n * @async\r\n * @function fetchNews\r\n */\r\nasync function fetchNews() {\r\n    const apiKey = '8cf220f2e3f548b78aa38afc2f12b039';\r\n    const url = `https://newsapi.org/v2/top-headlines?category=health&language=en&apiKey=${apiKey}`;\r\n\r\n    try {\r\n        // Display loading message while fetching the data\r\n        newsContainer.innerHTML = `<p>Loading news...</p>`;\r\n        \r\n        // Fetch the data from the NewsAPI\r\n        const response = await fetch(url);\r\n\r\n        // If the response is not okay, throw an error\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        // Convert the response to JSON format\r\n        const data = await response.json();\r\n        \r\n        // Display the fetched articles\r\n        displayNews(data.articles);\r\n    } catch (error) {\r\n        // Handle errors and display an error message\r\n        newsContainer.innerHTML = `<p class=\"error\">Error fetching news: ${error.message}</p>`;\r\n    }\r\n}\r\n\r\n/**\r\n * Displays the news articles in the `newsContainer` element.\r\n * \r\n * @function displayNews\r\n * @param {Array} articles - An array of news article objects.\r\n */\r\nfunction displayNews(articles) {\r\n    // If no articles are found, display a message\r\n    if (!articles || articles.length === 0) {\r\n        newsContainer.innerHTML = \"<p>No news articles found.</p>\";\r\n        return;\r\n    }\r\n\r\n    // Display up to 12 articles in the container\r\n    newsContainer.innerHTML = articles\r\n        .slice(0, 12) // Display only the first 12 articles\r\n        .map(article => `\r\n            <div class=\"news-article\">\r\n                <img src=\"${article.urlToImage || 'https://via.placeholder.com/300'}\" alt=\"News Image\">\r\n                <div class=\"news-content\">\r\n                    <h3><a href=\"${article.url}\" target=\"_blank\">${article.title || \"No title available\"}</a></h3>\r\n                    <p>${article.description ? article.description.substring(0, 80) + '...' : \"No description available.\"}</p>\r\n                    <p><strong>Source:</strong> ${article.source.name || \"Unknown\"} | <strong>Date:</strong> ${new Date(article.publishedAt).toLocaleDateString()}</p>\r\n                </div>\r\n            </div>\r\n        `).join('');\r\n}\r\n\r\n/**\r\n * Event listener that runs once the DOM content is loaded.\r\n * It calls `fetchNews` to load the news.\r\n * \r\n * @event document#DOMContentLoaded\r\n */\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    // Fetch and display the latest news\r\n    fetchNews();\r\n});\r\n"],"names":[],"version":3,"file":"news.d64a10ec.js.map","sourceRoot":"/__parcel_source_root/"}