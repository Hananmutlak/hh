{"mappings":"ACOA,eAAe,YAIX,GAAI,CAEA,cAAc,SAAS,CAAG,yBAG1B,IAAM,EAAW,MAAM,MAPf,4GAUR,GAAI,CAAC,EAAS,EAAE,CACZ,MAAM,AAAI,MAAM,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAA,CAAE,EAI5D,IAAM,EAAO,MAAM,EAAS,IAAI,GAGhC,YAAY,EAAK,QAAQ,CAC7B,CAAE,MAAO,EAAO,CAEZ,cAAc,SAAS,CAAG,CAAC,sCAAsC,EAAE,EAAM,OAAO,CAAC,IAAI,CAAC,AAC1F,CACJ,CAQA,SAAS,YAAY,CAAQ,EAEzB,GAAI,CAAC,GAAY,AAAoB,IAApB,EAAS,MAAM,CAAQ,CACpC,cAAc,SAAS,CAAG,iCAC1B,MACJ,CAGA,cAAc,SAAS,CAAG,EACrB,KAAK,CAAC,EAAG,IACT,GAAG,CAAC,AAAA,GAAW;A;AAEE,0BAAA,EAAE,EAAQ,UAAU,EAAI,kCAAkC;A;AAEnD,iCAAA,EAAE,EAAQ,GAAG,CAAC,kBAAkB,EAAE,EAAQ,KAAK,EAAI,qBAAqB;AAClF,uBAAA,EAAE,EAAQ,WAAW,CAAG,EAAQ,WAAW,CAAC,SAAS,CAAC,EAAG,IAAM,MAAQ,4BAA4B;AAC1E,gDAAA,EAAE,EAAQ,MAAM,CAAC,IAAI,EAAI,UAAU,0BAA0B,EAAE,IAAI,KAAK,EAAQ,WAAW,EAAE,kBAAkB,GAAG;A;A;AAG1J,QAAA,CAAC,EAAE,IAAI,CAAC,GAChB,CAQA,SAAS,gBAAgB,CAAC,mBAAoB,KAE1C,WACJ","sources":["<anon>","src/js/news.js"],"sourcesContent":["/**\r\n * Fetches the latest health-related news using NewsAPI.\r\n * Displays the news articles in the `newsContainer` element.\r\n * \r\n * @async\r\n * @function fetchNews\r\n */ async function fetchNews() {\n    const apiKey = '8cf220f2e3f548b78aa38afc2f12b039';\n    const url = `https://newsapi.org/v2/top-headlines?category=health&language=en&apiKey=${apiKey}`;\n    try {\n        // Display loading message while fetching the data\n        newsContainer.innerHTML = `<p>Loading news...</p>`;\n        // Fetch the data from the NewsAPI\n        const response = await fetch(url);\n        // If the response is not okay, throw an error\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        // Convert the response to JSON format\n        const data = await response.json();\n        // Display the fetched articles\n        displayNews(data.articles);\n    } catch (error) {\n        // Handle errors and display an error message\n        newsContainer.innerHTML = `<p class=\"error\">Error fetching news: ${error.message}</p>`;\n    }\n}\n/**\r\n * Displays the news articles in the `newsContainer` element.\r\n * \r\n * @function displayNews\r\n * @param {Array} articles - An array of news article objects.\r\n */ function displayNews(articles) {\n    // If no articles are found, display a message\n    if (!articles || articles.length === 0) {\n        newsContainer.innerHTML = \"<p>No news articles found.</p>\";\n        return;\n    }\n    // Display up to 12 articles in the container\n    newsContainer.innerHTML = articles.slice(0, 12) // Display only the first 12 articles\n    .map((article)=>`\n            <div class=\"news-article\">\n                <img src=\"${article.urlToImage || 'https://via.placeholder.com/300'}\" alt=\"News Image\">\n                <div class=\"news-content\">\n                    <h3><a href=\"${article.url}\" target=\"_blank\">${article.title || \"No title available\"}</a></h3>\n                    <p>${article.description ? article.description.substring(0, 80) + '...' : \"No description available.\"}</p>\n                    <p><strong>Source:</strong> ${article.source.name || \"Unknown\"} | <strong>Date:</strong> ${new Date(article.publishedAt).toLocaleDateString()}</p>\n                </div>\n            </div>\n        `).join('');\n}\n/**\r\n * Event listener that runs once the DOM content is loaded.\r\n * It calls `fetchNews` to load the news.\r\n * \r\n * @event document#DOMContentLoaded\r\n */ document.addEventListener('DOMContentLoaded', ()=>{\n    // Fetch and display the latest news\n    fetchNews();\n});\n\n//# sourceMappingURL=news.f80d63b7.js.map\n","/**\r\n * Fetches the latest health-related news using NewsAPI.\r\n * Displays the news articles in the `newsContainer` element.\r\n * \r\n * @async\r\n * @function fetchNews\r\n */\r\nasync function fetchNews() {\r\n    const apiKey = '8cf220f2e3f548b78aa38afc2f12b039';\r\n    const url = `https://newsapi.org/v2/top-headlines?category=health&language=en&apiKey=${apiKey}`;\r\n\r\n    try {\r\n        // Display loading message while fetching the data\r\n        newsContainer.innerHTML = `<p>Loading news...</p>`;\r\n        \r\n        // Fetch the data from the NewsAPI\r\n        const response = await fetch(url);\r\n\r\n        // If the response is not okay, throw an error\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        // Convert the response to JSON format\r\n        const data = await response.json();\r\n        \r\n        // Display the fetched articles\r\n        displayNews(data.articles);\r\n    } catch (error) {\r\n        // Handle errors and display an error message\r\n        newsContainer.innerHTML = `<p class=\"error\">Error fetching news: ${error.message}</p>`;\r\n    }\r\n}\r\n\r\n/**\r\n * Displays the news articles in the `newsContainer` element.\r\n * \r\n * @function displayNews\r\n * @param {Array} articles - An array of news article objects.\r\n */\r\nfunction displayNews(articles) {\r\n    // If no articles are found, display a message\r\n    if (!articles || articles.length === 0) {\r\n        newsContainer.innerHTML = \"<p>No news articles found.</p>\";\r\n        return;\r\n    }\r\n\r\n    // Display up to 12 articles in the container\r\n    newsContainer.innerHTML = articles\r\n        .slice(0, 12) // Display only the first 12 articles\r\n        .map(article => `\r\n            <div class=\"news-article\">\r\n                <img src=\"${article.urlToImage || 'https://via.placeholder.com/300'}\" alt=\"News Image\">\r\n                <div class=\"news-content\">\r\n                    <h3><a href=\"${article.url}\" target=\"_blank\">${article.title || \"No title available\"}</a></h3>\r\n                    <p>${article.description ? article.description.substring(0, 80) + '...' : \"No description available.\"}</p>\r\n                    <p><strong>Source:</strong> ${article.source.name || \"Unknown\"} | <strong>Date:</strong> ${new Date(article.publishedAt).toLocaleDateString()}</p>\r\n                </div>\r\n            </div>\r\n        `).join('');\r\n}\r\n\r\n/**\r\n * Event listener that runs once the DOM content is loaded.\r\n * It calls `fetchNews` to load the news.\r\n * \r\n * @event document#DOMContentLoaded\r\n */\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    // Fetch and display the latest news\r\n    fetchNews();\r\n});\r\n"],"names":["fetchNews","newsContainer","innerHTML","response","fetch","ok","Error","status","data","json","displayNews","articles","error","message","length","slice","map","article","urlToImage","url","title","description","substring","source","name","Date","publishedAt","toLocaleDateString","join","document","addEventListener"],"version":3,"file":"news.f80d63b7.js.map"}